filter {
    if [type] == "mig-audit" {
            grok {
                match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:kvpairs}" }
                remove_field => ["message"]
            }
            date {
                match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
                remove_field => ["timestamp"]
            }
            kv {
                source => "kvpairs"
                target => "data"
                field_split => "|"
                remove_field => ["kvpairs"]
            }
            mutate {
                replace => { "[@metadata][beat]" => "mig-audit" }
                convert => { "[data][duration]" => "integer" }
                convert => { "[data][time]" => "integer" }
                convert => { "[data][size]" => "integer" }
                convert => { "[data][batchSize]" => "integer" }
                convert => { "[data][retryCounter]" => "integer" }
                remove_field => ["source", "offset", "input_type", "beat"]
            }
    }
    if [type] == "mig-error" {
            grok {
                match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:logLevel} %{DATA:class} \[%{GREEDYDATA:object}\] %{GREEDYDATA:details}" }
                remove_field => ["message"]
            }
            date {
                match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
                remove_field => ["timestamp"]
            }
            mutate {
                replace => { "[@metadata][beat]" => "mig-logs" }
                remove_field => ["source", "offset", "input_type", "beat"]
            }
    }
    if [type] == "mig-calls" {
               ruby {
    				code => "
    							msg = event.get('message');
    							if !(msg.include? 'getProcessResult') && msg.length > 50000
    								event.set('message', msg.slice(0, 50000) + '...')
    							end
    						"
    		   }
               grok {
                   match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{GREEDYDATA:object}\] %{GREEDYDATA:details}" }
                   remove_field => ["message"]
               }
               date {
                   match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
                   remove_field => ["timestamp"]
               }
               mutate {
                   replace => { "[@metadata][beat]" => "mig-logs" }
                   remove_field => ["source", "offset", "input_type", "beat"]
               }
       }

}
